@page "/login"
@using BDefenderBlazorApp.Model
@using System.Timers
@inject NavigationManager NavManager
<h3>Login</h3>

<div class="form-container">
    <form method="post">
        <EditForm Model="@userL" OnValidSubmit="LoginUser">
            <h2 class="text-center"><strong>Welcome back</strong></h2>
            <div class="form-group">
                <InputText id="username" class="form-control" placeholder="Username" @bind-Value="userL.Username" />
                <ValidationMessage For="@(() => userL.Username)" />
            </div>
            <div class="form-group" style="display:inline-flex">
                <InputText type="@showType" id="password" class="form-control" placeholder="Password" @bind-Value="userL.Password" />
                <i class="far fa-eye" @onclick="() => showPassword()"></i>
                <ValidationMessage For="@(() => userL.Password)" />
            </div>
            <div class="form-group">
                <input class="btn btn-success btn-block" type="submit" value="Submit"> <a class="already" href="/register"> Don't have an account? Register here.</a>
            </div>
        </EditForm>
    </form>
</div>

<p>@res</p>
@code {
    private List<User> users;
    private string showType = "password";
    private static Timer aTimer;
    private string res = "";

    private Login userL = new Login();

    HttpClient httpClient = new HttpClient()
    {
        BaseAddress = new Uri("http://localhost:5001")
    };

    private void showPassword()
    {
        if (showType == "password")
        {
            showType = "text";
        }
        else if (showType == "text")
        {
            showType = "password";
        }
    }

    protected async Task LoginUser()
    {
        HttpResponseMessage response = await httpClient.PostAsJsonAsync<Login>("/api/v1/Login", userL);
        if (response.StatusCode.ToString() != "OK")
        {
            res = "Invalid credentials!";
        }
        else
        {
            res = "Logged in successfully!";
        }
    }
}
