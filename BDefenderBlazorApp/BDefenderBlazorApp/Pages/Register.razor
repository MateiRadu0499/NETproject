@page "/register"
@using System.Timers
@inject NavigationManager NavManager
@using BDefenderBlazorApp.Model
<h3>Register</h3>

<div class="form-container">
    <form method="post">
        <EditForm Model="@user" OnValidSubmit="RegisterUser">
            <DataAnnotationsValidator />
            <h2 class="text-center"><strong>Create an account </strong> </h2>
            <div class="form-group">
                <InputText id="username" class="form-control" placeholder="Username" @bind-Value="user.Username" />
                <ValidationMessage For="@(() => user.Username)" />
            </div>
            <div class="form-group">
                <InputText id="firstName" class="form-control" placeholder="First Name" @bind-Value="user.FirstName" />
                <ValidationMessage For="@(() => user.FirstName)" />
            </div>
            <div class="form-group">
                <InputText id="lastName" class="form-control" placeholder="Last Name" @bind-Value="user.LastName" />
                <ValidationMessage For="@(() => user.LastName)" />
            </div>
            <div class="form-group">
                <InputText id="phoneNumber" class="form-control" placeholder="PhoneNumber" @bind-Value="user.PhoneNumber" />
                <ValidationMessage For="@(() => user.PhoneNumber)" />
            </div>
            <div class="form-group">
                <InputText id="affiliation" class="form-control" placeholder="Affiliation" @bind-Value="user.Affiliation" />
                <ValidationMessage For="@(() => user.Affiliation)" />
            </div>
            <div class="form-group" style="display: inline-flex">
                <InputText type=@showType class="form-control" id="register-password" placeholder="Password" @bind-Value="user.Password" />
                <i class="far fa-eye" @onclick="() => showPassword()"></i>
                <ValidationMessage For="@(() => user.Password)" />
            </div>

            <div class="form-group">
                <input class="btn btn-success btn-block" type="submit" value="Submit" /><a class="already" href="/login">You already have an account? Login here.</a>

            </div>

        </EditForm>
    </form>
</div>

<p>@res</p>

@code {
    private User user = new User();
    private string showType = "password";
    private string res = "";
    private static Timer timer;

    HttpClient httpClient = new HttpClient()
    {
        BaseAddress = new Uri("http://localhost:5001")
    };

    private void showPassword()
    {
        if (showType == "password")
        {
            showType = "text";
        }
        else if (showType == "text")
        {
            showType = "password";
        }
    }

    protected async Task RegisterUser()
    {
        HttpResponseMessage response = await httpClient.PostAsJsonAsync<User>("/api/v1/Register", user);
        if (response.StatusCode.ToString() == "OK")
        {
            res = "Account created succesfully";
        }
        else
        {
            res = "Username already in use.";
        }

        timer = new System.Timers.Timer();
        timer.Interval = 6000;

        timer.Elapsed += (sender, args) =>
        {
            NavManager.NavigateTo("/login");
        };


        timer.AutoReset = true;
        timer.Enabled = true;
    }
}